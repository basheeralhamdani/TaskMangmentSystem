<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Task Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom animations and transitions */
        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .slide-in {
            animation: slideIn 0.3s ease-out;
        }

        @@keyframes slideIn {
            from { transform: translateX(-100%); }
            to { transform: translateX(0); }
        }

        .hover-lift {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .hover-lift:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        .gradient-bg {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
        }

        .text-gradient {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .btn-gradient {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            transition: all 0.3s ease;
        }

        .btn-gradient:hover {
            background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(99, 102, 241, 0.4);
        }

        .card-hover {
            transition: all 0.3s ease;
        }

        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        .skeleton {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: loading 1.5s infinite;
        }

        @@keyframes loading {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }

        /* Sidebar styles */
        .sidebar {
            transition: all 0.3s ease;
        }

        .sidebar-collapsed {
            width: 80px;
        }

        .sidebar-expanded {
            width: 240px;
        }

        /* Notification styles */
        .notification-enter {
            animation: notificationEnter 0.3s ease-out;
        }

        @@keyframes notificationEnter {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .notification-exit {
            animation: notificationExit 0.3s ease-in;
        }

        @@keyframes notificationExit {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-md fixed top-0 left-0 right-0 z-50">
        <div class="px-4 py-3 flex items-center justify-between">
            <div class="flex items-center">
                <button id="sidebarToggle" class="text-gray-500 hover:text-gray-700 focus:outline-none focus:text-gray-700 mr-4">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
                <a class="flex items-center" asp-controller="Home" asp-action="Dashboard">
                    <div class="h-8 w-8 rounded-md bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center mr-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                    </div>
                    <span class="text-xl font-bold text-gray-800">Task Management</span>
                </a>
            </div>

            <div class="flex items-center space-x-4">
                <!-- Search -->
                <div class="hidden md:block">
                    <div class="relative rounded-md shadow-sm">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                        <input type="text" class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" placeholder="Search...">
                    </div>
                </div>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.12/signalr.min.js"></script>


                <!-- Notifications -->
                <div class="relative" id="notifBell">
                    <button id="notifButton" class="text-gray-500 hover:text-gray-700 focus:outline-none relative">
                        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                        </svg>
                        <span id="notifDot" class="hidden absolute top-0 right-0 h-2 w-2 rounded-full bg-red-500 transform translate-x-1/2 -translate-y-1/2"></span>
                    </button>
                    <div id="notifMenu" class="hidden absolute right-0 mt-2 w-80 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 z-50">
                        <div class="p-3 border-b">
                            <p class="text-sm font-medium text-gray-700">Notifications</p>
                        </div>
                        <ul id="notifList" class="max-h-96 overflow-y-auto divide-y">
                            <li class="p-3 text-sm text-gray-500">No notifications</li>
                        </ul>
                    </div>
                </div>

                <!-- User menu -->
                <div class="relative flex items-center space-x-3">
                    <a asp-controller="Profile" asp-action="Index" class="px-3 py-1.5 text-sm rounded-md text-gray-700 hover:bg-gray-100 border border-gray-200">Profile</a>
                    <a asp-controller="Account" asp-action="Logout" class="px-3 py-1.5 text-sm rounded-md text-gray-700 hover:bg-gray-100 border border-gray-200">Logout</a>
                    <a asp-controller="Profile" asp-action="Index" class="flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        <img class="h-8 w-8 rounded-full" src="https://picsum.photos/seed/user123/40/40.jpg" alt="User avatar">
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Sidebar -->
    <div id="sidebar" class="sidebar sidebar-expanded fixed left-0 top-16 bottom-0 w-64 bg-white shadow-lg z-40 overflow-y-auto">
        <div class="p-4">
            <ul class="space-y-2">
                <li>
                    <a asp-controller="Home" asp-action="Dashboard" class="flex items-center p-3 text-gray-700 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                        <svg class="h-5 w-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                        </svg>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li>
                    <a asp-controller="Tasks" asp-action="Index" class="flex items-center p-3 text-gray-700 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                        <svg class="h-5 w-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        <span>Tasks</span>
                    </a>
                </li>
                @if (User.IsInRole("SystemAdministrator"))
                {
                    <li>
                        <a asp-controller="Users" asp-action="Index" class="flex items-center p-3 text-gray-700 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                            <svg class="h-5 w-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"></path>
                            </svg>
                            <span>Users</span>
                        </a>
                    </li>
                }
                <li>
                    <a asp-controller="Reports" asp-action="Index" class="flex items-center p-3 text-gray-700 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                        <svg class="h-5 w-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                        </svg>
                        <span>Reports</span>
                    </a>
                </li>
            </ul>
        </div>

        <div class="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200">
            <div class="flex items-center">
                <img class="h-10 w-10 rounded-full" src="https://picsum.photos/seed/currentuser/40/40.jpg" alt="User avatar">
                <div class="ml-3">
                    <p class="text-sm font-medium text-gray-700">John Doe</p>
                    <p class="text-xs text-gray-500">Administrator</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <main id="mainContent" class="ml-64 mt-16 p-6 transition-all duration-300">
        @RenderBody()
    </main>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Sidebar toggle functionality
        document.addEventListener('DOMContentLoaded', function() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');
            const sidebarToggle = document.getElementById('sidebarToggle');

            sidebarToggle.addEventListener('click', function() {
                if (sidebar.classList.contains('sidebar-expanded')) {
                    sidebar.classList.remove('sidebar-expanded');
                    sidebar.classList.add('sidebar-collapsed');
                    mainContent.classList.remove('ml-64');
                    mainContent.classList.add('ml-20');
                } else {
                    sidebar.classList.remove('sidebar-collapsed');
                    sidebar.classList.add('sidebar-expanded');
                    mainContent.classList.remove('ml-20');
                    mainContent.classList.add('ml-64');
                }
            });

            // Add animation to elements on page load
            const animatedElements = document.querySelectorAll('.fade-in');
            animatedElements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 100);
            });
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const notifButton = document.getElementById('notifButton');
                const notifMenu = document.getElementById('notifMenu');
                const notifList = document.getElementById('notifList');
                const notifDot = document.getElementById('notifDot');

                function addNotification(item) {
                    if (!item) return;
                    if (notifList.querySelector('[data-empty]')) {
                        notifList.innerHTML = '';
                    }
                    const li = document.createElement('li');
                    li.className = 'p-3 hover:bg-gray-50';
                    li.innerHTML = `
                        <div class="flex items-start">
                            <div class="flex-1">
                                <p class="text-sm font-medium text-gray-800">${item.title ?? 'Task update'}</p>
                                <p class="text-xs text-gray-500">${item.message ?? ''}</p>
                            </div>
                            <span class="ml-2 text-[10px] text-gray-400">${new Date(item.when ?? Date.now()).toLocaleTimeString()}</span>
                        </div>`;
                    notifList.prepend(li);
                    notifDot.classList.remove('hidden');
                }

                if (notifButton) {
                    notifButton.addEventListener('click', () => {
                        notifMenu.classList.toggle('hidden');
                        notifDot.classList.add('hidden');
                    });
                }

                // SignalR connection
                if (window.signalR) {
                    const connection = new signalR.HubConnectionBuilder()
                        .withUrl('/hubs/notifications')
                        .withAutomaticReconnect()
                        .build();

                        // expose connection globally for pages to use (e.g., join task group)
                        window.appHubConnection = connection;


                    connection.on('TaskAssigned', payload => addNotification(payload));
                    connection.on('TaskStatusChanged', payload => addNotification(payload));
                    connection.on('TaskDueSoon', payload => addNotification(payload));
                    connection.on('TaskCompleted', payload => addNotification(payload));
                    connection.on('TaskOverdue', payload => addNotification(payload));
                    connection.on('TaskCommentAdded', payload => addNotification(payload));

                    connection.start().catch(err => console.error('SignalR failed', err));
                }
            });
        </script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                    anchor.addEventListener('click', function (e) {
                        e.preventDefault();
                        const target = document.querySelector(this.getAttribute('href'));
                        if (target) {
                            target.scrollIntoView({ behavior: 'smooth' });
                        }
                    });
                });
            });
        </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
@model TaskManagementSystem.API.Models.UserViewModel
@{
    ViewData["Title"] = "Delete User";
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50">
    <div class="container mx-auto px-4 py-8">
        <div class="mb-6">
            <a href="@Url.Action("Index", "Users")" class="text-blue-600 hover:text-blue-800 font-medium flex items-center transition-all duration-300 transform hover:scale-105">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to Users
            </a>
        </div>

        <div class="max-w-3xl mx-auto">
            <div class="bg-white rounded-xl shadow-lg overflow-hidden transform transition-all duration-300 hover:shadow-xl">
                <div class="bg-gradient-to-r from-red-500 to-orange-600 px-6 py-6 text-white">
                    <h1 class="text-2xl font-bold">Delete User</h1>
                    <p class="text-red-100 mt-1">Are you sure you want to delete this user? This action cannot be undone.</p>
                </div>

                <div class="p-6">
                    <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-6 rounded-r-lg transform transition-all duration-300 hover:scale-[1.01]">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                </svg>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-red-700">
                                    <strong>Warning:</strong> This action will permanently delete the user account and all associated data.
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                        <div>
                            <h3 class="text-sm font-medium text-gray-500">User Details</h3>
                            <dl class="mt-2 space-y-2">
                                <div>
                                    <dt class="text-sm font-medium text-gray-900">Username</dt>
                                    <dd class="text-sm text-gray-700 mt-1">@Model.Username</dd>
                                </div>
                                <div>
                                    <dt class="text-sm font-medium text-gray-900">Email</dt>
                                    <dd class="text-sm text-gray-700 mt-1">@Model.Email</dd>
                                </div>
                                <div>
                                    <dt class="text-sm font-medium text-gray-900">Role</dt>
                                    <dd class="mt-1">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                            @(Model.Role == UserRole.SystemAdministrator ? "bg-red-100 text-red-800" : 
                                              Model.Role == UserRole.TaskAdministrator ? "bg-purple-100 text-purple-800" : 
                                              Model.Role == UserRole.Manager ? "bg-blue-100 text-blue-800" : 
                                              "bg-green-100 text-green-800")">
                                            @Model.Role
                                        </span>
                                    </dd>
                                </div>
                            </dl>
                        </div>

                        <div>
                            <h3 class="text-sm font-medium text-gray-500">Account Information</h3>
                            <dl class="mt-2 space-y-2">
                                <div>
                                    <dt class="text-sm font-medium text-gray-900">Member Since</dt>
                                    <dd class="text-sm text-gray-700 mt-1">@Model.CreatedAt.ToString("MMMM dd, yyyy")</dd>
                                </div>
                                <div>
                                    <dt class="text-sm font-medium text-gray-900">Last Login</dt>
                                    <dd class="text-sm text-gray-700 mt-1">
                                        @(Model.LastLogin.HasValue ? Model.LastLogin.Value.ToString("MMMM dd, yyyy") : "Never")
                                    </dd>
                                </div>
                                <div>
                                    <dt class="text-sm font-medium text-gray-900">Assigned Tasks</dt>
                                    <dd class="text-sm text-gray-700 mt-1">@Model.AssignedTasksCount tasks</dd>
                                </div>
                            </dl>
                        </div>
                    </div>

                    <div class="flex justify-end space-x-3">
                        <a href="@Url.Action("Index", "Users")" class="px-6 py-3 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-300 transform hover:scale-105">
                            Cancel
                        </a>
                        <form asp-action="Delete" class="inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" asp-for="Id" />
                            <button type="submit" class="px-6 py-3 border border-transparent text-sm font-medium rounded-md text-white bg-gradient-to-r from-red-600 to-orange-700 hover:from-red-700 hover:to-orange-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-300 transform hover:scale-105 flex items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                                Delete User
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    // Show confirmation dialog with custom styling
                    e.preventDefault();

                    const modal = document.createElement('div');
                    modal.className = 'fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300';
                    modal.innerHTML = `
                        <div class="bg-white rounded-lg p-6 max-w-md w-full transform transition-all duration-300 scale-95 opacity-0">
                            <div class="flex justify-between items-center mb-4">
                                <h3 class="text-lg font-medium text-gray-900">Confirm Deletion</h3>
                                <button type="button" class="text-gray-400 hover:text-gray-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                            </div>
                            <p class="text-sm text-gray-500 mb-4">Are you sure you want to delete this user? This action cannot be undone.</p>
                            <div class="flex justify-end space-x-3">
                                <button type="button" class="px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 transition-all duration-300 cancel-button">
                                    Cancel
                                </button>
                                <button type="button" class="px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 transition-all duration-300 confirm-button">
                                    Delete
                                </button>
                            </div>
                        </div>
                    `;

                    document.body.appendChild(modal);

                    // Animate modal in
                    setTimeout(() => {
                        modal.querySelector('.bg-white').classList.remove('scale-95', 'opacity-0');
                        modal.querySelector('.bg-white').classList.add('scale-100', 'opacity-100');
                    }, 10);

                    // Handle confirm button click
                    modal.querySelector('.confirm-button').addEventListener('click', function() {
                        modal.querySelector('.bg-white').classList.add('scale-95', 'opacity-0');
                        modal.querySelector('.bg-white').classList.remove('scale-100', 'opacity-100');

                        setTimeout(() => {
                            modal.remove();
                            form.submit();
                        }, 300);
                    });

                    // Handle cancel button click or close button click
                    modal.querySelector('.cancel-button, button[type="button"]').addEventListener('click', function() {
                        modal.querySelector('.bg-white').classList.add('scale-95', 'opacity-0');
                        modal.querySelector('.bg-white').classList.remove('scale-100', 'opacity-100');

                        setTimeout(() => {
                            modal.remove();
                        }, 300);
                    });
                });
            }
        });
    </script>
}
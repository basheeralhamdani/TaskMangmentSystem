@model IEnumerable<TaskManagementSystem.API.Models.TaskViewModel>
@{
    ViewData["Title"] = "Tasks";
}

<div class="min-h-screen bg-gray-50">
    <div class="container mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold text-gray-800">Tasks</h1>
                <p class="text-gray-600">Manage and track all your tasks in one place.</p>
            </div>
            <a href="@Url.Action("Create", "Tasks")" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                Create New Task
            </a>
        </div>

        <div class="bg-white rounded-xl shadow-md overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Task</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Priority</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Assigned To</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Due Date</th>
                            <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var task in Model)
                            {
                                <tr class="hover:bg-gray-50 transition-colors duration-150">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="flex-shrink-0 h-10 w-10">
                                                <div class="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                                                    </svg>
                                                </div>
                                            </div>
                                            <div class="ml-4">
                                                <div class="text-sm font-medium text-gray-900">@task.Title</div>
                                                <div class="text-sm text-gray-500">@task.Description</div>
                                                <div class="text-xs text-gray-400 mt-1">@task.SystemName</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                            @(task.Status == TaskManagementSystem.Core.Models.TaskStatus.Completed ? "bg-green-100 text-green-800" :
                                              task.Status == TaskManagementSystem.Core.Models.TaskStatus.Pending ? "bg-yellow-100 text-yellow-800" :
                                              task.Status == TaskManagementSystem.Core.Models.TaskStatus.InProgress ? "bg-blue-100 text-blue-800" :
                                              "bg-gray-100 text-gray-800")">
                                            @task.Status
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                            @(task.Priority == PriorityLevel.Critical ? "bg-red-100 text-red-800" : 
                                              task.Priority == PriorityLevel.High ? "bg-orange-100 text-orange-800" : 
                                              task.Priority == PriorityLevel.Medium ? "bg-yellow-100 text-yellow-800" : 
                                              "bg-green-100 text-green-800")">
                                            @task.Priority
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @task.AssignedToUsername
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @task.DueDate?.ToString("yyyy-MM-dd") ?? "No due date"
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <a href="@Url.Action("Details", "Tasks", new { id = task.Id })" class="text-blue-600 hover:text-blue-900 mr-3 transition-colors duration-150">
                                            View
                                        </a>
                                        <a href="@Url.Action("Edit", "Tasks", new { id = task.Id })" class="text-indigo-600 hover:text-indigo-900 transition-colors duration-150">
                                            Edit
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="px-6 py-4 text-center text-gray-500">No tasks found</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>